{"version":3,"sources":["ng://auth/environments/environment.ts","ng://auth/lib/auth.service.ts","ng://auth/lib/auth.component.ts","ng://auth/lib/auth.module.ts"],"names":["environment","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthService","prototype","signInWithPhone","num","appVerifier","this","windowRef","recaptchaVerifier","firebase.auth","signInWithPhoneNumber","varifyOTP","otp","confirmationResult","confirm","signInWithGoogle","afAuth","auth","signInWithPopup","GoogleAuthProvider","signInWithEmail","email","password","signInWithEmailAndPassword","signUpWithEmail","createUserWithEmailAndPassword","sendForgotPasswordLink","sendPasswordResetEmail","logOut","signOut","window","location","reload","Injectable","args","providedIn","AngularFireAuth","firebase.initializeApp","AuthComponent","ngOnInit","Component","selector","template","AuthModule","NgModule","declarations","imports","exports"],"mappings":"kZAIA,IAAaA,EAED,CACRC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,uCCbXC,GAeEA,EAAAC,UAAAC,gBAAA,SAAgBC,OACRC,EAAcC,KAAKC,UAAUC,kBACnC,OAAOC,EAAAA,OAAgBC,sBAAsBN,EAAKC,IAEpDJ,EAAAC,UAAAS,UAAA,SAAUC,GACR,OAAON,KAAKC,UAAUM,mBAAmBC,QAAQF,IAEnDX,EAAAC,UAAAa,iBAAA,WACE,OAAOT,KAAKU,OAAOC,KAAKC,gBAAgB,IAAID,EAAAA,KAAKE,qBAEnDlB,EAAAC,UAAAkB,gBAAA,SAAgBC,EAAaC,GAC3B,OAAOhB,KAAKU,OAAOC,KAAKM,2BAA2BF,EAAMC,IAE3DrB,EAAAC,UAAAsB,gBAAA,SAAgBH,EAAMC,GACpB,OAAOhB,KAAKU,OAAOC,KAAKQ,+BAA+BJ,EAAMC,IAE/DrB,EAAAC,UAAAwB,uBAAA,SAAuBL,GACrB,OAAOf,KAAKU,OAAOC,KAAKU,uBAAuBN,IAEjDpB,EAAAC,UAAA0B,OAAA,WACEtB,KAAKU,OAAOC,KAAKY,UACjBC,OAAOC,SAASC,8BA/BnBC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLC,EAAAA,sJAOP,SAAAnC,EAAoBe,GAAAV,KAAAU,OAAAA,EAClBqB,EAAAA,cAAuB5C,GACvBa,KAAKC,UAAYuB,OCZrB,IAAAQ,GAeEA,EAAApC,UAAAqC,SAAA,iCAbDC,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,WACVC,SAAU,uFAcZJ,GALE,SAAAA,KCbF,IAAAK,uBAGCC,EAAAA,SAAQV,KAAA,CAAC,CACRW,aAAc,CAACP,GACfQ,QAAS,GAETC,QAAS,CAACT,OAEcK,GAN1B,SAAAA","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB03fbxNKG9fquNMkK-05zhbw70SMAtVkc\",\n    authDomain: \"tut1-a4ded.firebaseapp.com\",\n    databaseURL: \"https://tut1-a4ded.firebaseio.com\",\n    projectId: \"tut1-a4ded\",\n    storageBucket: \"tut1-a4ded.appspot.com\",\n    messagingSenderId: \"347515672762\",\n    appId: \"1:347515672762:web:051a112bbbc0fca5\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\nimport {environment} from '../environments/environment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  windowRef:any\n  constructor(private afAuth:AngularFireAuth) { \n    firebase.initializeApp(environment.firebase);\n    this.windowRef = window\n    \n  }\n  signInWithPhone(num){\n    const appVerifier = this.windowRef.recaptchaVerifier;\n    return firebase.auth().signInWithPhoneNumber(num, appVerifier)\n  }\n  varifyOTP(otp){\n    return this.windowRef.confirmationResult.confirm(otp)\n  }\n  signInWithGoogle(){\n    return this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n  }\n  signInWithEmail(email:string,password:string){\n    return this.afAuth.auth.signInWithEmailAndPassword(email,password)\n  }\n  signUpWithEmail(email,password){\n    return this.afAuth.auth.createUserWithEmailAndPassword(email,password)\n  }\n  sendForgotPasswordLink(email){\n    return this.afAuth.auth.sendPasswordResetEmail(email)\n  }\n  logOut(){\n    this.afAuth.auth.signOut()\n    window.location.reload()\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-auth',\n  template: `\n    <p>\n      auth works!\n    </p>\n  `,\n  styles: []\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AuthComponent } from './auth.component';\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n  ],\n  exports: [AuthComponent]\n})\nexport class AuthModule { }\n"]}